{"ast":null,"code":"var _jsxFileName = \"/Users/alexander_hritsun/WebstormProjects/asr/client/src/pages/Login/index.jsx\";\nimport React, { useState, useContext } from \"react\";\nimport { Form, Button } from \"react-bootstrap\";\nimport { useHttp } from \"../../hooks/http.hook\";\nimport { AuthContext } from '../../context/AuthContext';\nimport { FormErrors } from \"../../components/FormError\";\nimport { Spinner } from \"../../components/Loader\";\n\nfunction Login() {\n  const auth = useContext(AuthContext);\n  const {\n    loading,\n    request,\n    error\n  } = useHttp();\n  const [form, setForm] = useState({\n    email: '',\n    password: ''\n  });\n\n  const changeHandler = event => {\n    setForm({ ...form,\n      [event.target.name]: event.target.value\n    });\n  };\n\n  const loginHandler = async () => {\n    try {\n      const data = await request('/api/auth/login', 'POST', { ...form\n      });\n      auth.login(data.token, data.userId, data.userRole);\n    } catch (e) {}\n  };\n\n  if (loading) {\n    return /*#__PURE__*/React.createElement(Spinner, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 16\n      }\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 8\n    }\n  }, /*#__PURE__*/React.createElement(FormErrors, {\n    formErrors: error,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 12\n    }\n  }), /*#__PURE__*/React.createElement(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 16\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 20\n    }\n  }, \"Email\"), /*#__PURE__*/React.createElement(Form.Control, {\n    required: true,\n    size: \"lg\",\n    id: \"email\",\n    name: \"email\",\n    type: \"email\",\n    value: form.email,\n    placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 email\",\n    onChange: changeHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 20\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 16\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 20\n    }\n  }, \"\\u041F\\u0430\\u0440\\u043E\\u043B\\u044C\"), /*#__PURE__*/React.createElement(Form.Control, {\n    required: true,\n    size: \"lg\",\n    id: \"password\",\n    name: \"password\",\n    type: \"password\",\n    value: form.password,\n    placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u043F\\u0430\\u0440\\u043E\\u043B\\u044C\",\n    onChange: changeHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 20\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    variant: \"secondary\",\n    className: \"mr-m\",\n    type: \"submit\",\n    onClick: loginHandler,\n    disabled: loading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 16\n    }\n  }, \"\\u0412\\u043E\\u0439\\u0442\\u0438\")));\n}\n\nexport default Login;","map":{"version":3,"sources":["/Users/alexander_hritsun/WebstormProjects/asr/client/src/pages/Login/index.jsx"],"names":["React","useState","useContext","Form","Button","useHttp","AuthContext","FormErrors","Spinner","Login","auth","loading","request","error","form","setForm","email","password","changeHandler","event","target","name","value","loginHandler","data","login","token","userId","userRole","e"],"mappings":"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","sourcesContent":["import React, {useState, useContext} from \"react\";\nimport {Form, Button} from \"react-bootstrap\";\nimport {useHttp} from \"../../hooks/http.hook\";\nimport {AuthContext} from '../../context/AuthContext'\nimport {FormErrors} from \"../../components/FormError\";\nimport {Spinner} from \"../../components/Loader\";\n\n\n\nfunction Login() {\n    const auth = useContext(AuthContext)\n    const {loading, request, error} = useHttp();\n    const [form, setForm] = useState({\n        email: '', password: ''\n    })\n\n    const changeHandler = event => {\n        setForm({ ...form, [event.target.name]: event.target.value })\n    }\n    const loginHandler = async () => {\n        try {\n            const data = await request('/api/auth/login', 'POST', {...form})\n             auth.login(data.token, data.userId, data.userRole)\n        } catch (e) {}\n    }\n    if(loading){\n        return <Spinner/>\n    }\n   return (\n       <div className=\"form\">\n           <FormErrors formErrors={error} />\n           <Form>\n               <Form.Group controlId=\"email\">\n                   <Form.Label>Email</Form.Label>\n                   <Form.Control\n                       required\n                       size=\"lg\"\n                       id=\"email\"\n                       name=\"email\"\n                       type=\"email\"\n                       value={form.email}\n                       placeholder=\"Введите email\"\n                       onChange={changeHandler}\n                   />\n               </Form.Group>\n\n               <Form.Group controlId=\"password\">\n                   <Form.Label>Пароль</Form.Label>\n                   <Form.Control\n                       required\n                       size=\"lg\"\n                       id=\"password\"\n                       name=\"password\"\n                       type=\"password\"\n                       value={form.password}\n                       placeholder=\"Введите пароль\"\n                       onChange={changeHandler}\n                   />\n               </Form.Group>\n               <Button\n                   variant=\"secondary\"\n                   className='mr-m'\n                   type=\"submit\"\n                   onClick={loginHandler}\n                   disabled={loading}\n               >\n                   Войти\n               </Button>\n           </Form>\n       </div>\n   )\n}\n\nexport default Login"]},"metadata":{},"sourceType":"module"}