{"ast":null,"code":"var _jsxFileName = \"/Users/alexander_hritsun/WebstormProjects/asr/client/src/pages/Register/index.jsx\";\nimport React, { useState } from \"react\";\nimport { Form, Button } from \"react-bootstrap\";\nimport { useHttp } from \"../../hooks/http.hook\";\nimport { FormErrors } from \"../../components/FormError\";\nimport { Spinner } from \"../../components/Loader\";\n\nfunction Register() {\n  const {\n    loading,\n    request,\n    error\n  } = useHttp();\n  const [form, setForm] = useState({\n    email: '',\n    name: '',\n    password: '',\n    repeat_password: '',\n    role: 'user'\n  });\n\n  const changeHandler = event => {\n    setForm({ ...form,\n      [event.target.name]: event.target.value\n    });\n  };\n\n  const registerHandler = async () => {\n    try {\n      const data = await request('/api/auth/registration', 'POST', { ...form\n      });\n      console.log('Data ', data);\n    } catch (e) {}\n  };\n\n  if (loading) {\n    return /*#__PURE__*/React.createElement(Spinner, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 16\n      }\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FormErrors, {\n    formErrors: error,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 21\n    }\n  }, \"Email\"), /*#__PURE__*/React.createElement(Form.Control, {\n    required: true,\n    size: \"lg\",\n    id: \"email\",\n    name: \"email\",\n    type: \"email\",\n    value: form.email,\n    placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 email\",\n    onChange: changeHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"login\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 21\n    }\n  }, \"\\u041D\\u0438\\u043A\\u043D\\u0435\\u0439\\u043C\"), /*#__PURE__*/React.createElement(Form.Control, {\n    required: true,\n    size: \"lg\",\n    id: \"name\",\n    name: \"name\",\n    type: \"text\",\n    placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u043D\\u0438\\u043A\\u043D\\u0435\\u0439\\u043C\",\n    value: form.name,\n    onChange: changeHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 21\n    }\n  }, \"\\u041F\\u0430\\u0440\\u043E\\u043B\\u044C\"), /*#__PURE__*/React.createElement(Form.Control, {\n    required: true,\n    size: \"lg\",\n    id: \"password\",\n    name: \"password\",\n    type: \"password\",\n    value: form.password,\n    placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u043F\\u0430\\u0440\\u043E\\u043B\\u044C\",\n    onChange: changeHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"repeat_password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 21\n    }\n  }, \"\\u041F\\u0430\\u0440\\u043E\\u043B\\u044C \\u0435\\u0449\\u0451 \\u0440\\u0430\\u0437\"), /*#__PURE__*/React.createElement(Form.Control, {\n    required: true,\n    size: \"lg\",\n    id: \"repeat_password\",\n    name: \"repeat_password\",\n    type: \"password\",\n    value: form.repeat_password,\n    placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u043F\\u0430\\u0440\\u043E\\u043B\\u044C \\u043F\\u043E\\u0432\\u0442\\u043E\\u0440\\u043D\\u043E\",\n    onChange: changeHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    variant: \"secondary\",\n    className: \"mr-m\",\n    type: \"submit\",\n    onClick: registerHandler,\n    disabled: loading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 17\n    }\n  }, \"\\u0417\\u0430\\u0440\\u0435\\u0433\\u0438\\u0441\\u0442\\u0440\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C\\u0441\\u044F\")));\n}\n\nexport default Register;","map":{"version":3,"sources":["/Users/alexander_hritsun/WebstormProjects/asr/client/src/pages/Register/index.jsx"],"names":["React","useState","Form","Button","useHttp","FormErrors","Spinner","Register","loading","request","error","form","setForm","email","name","password","repeat_password","role","changeHandler","event","target","value","registerHandler","data","console","log","e"],"mappings":"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","sourcesContent":["import React, {useState} from \"react\";\nimport {Form, Button} from \"react-bootstrap\";\nimport {useHttp} from \"../../hooks/http.hook\";\nimport {FormErrors} from \"../../components/FormError\";\nimport {Spinner} from \"../../components/Loader\";\n\n\n\n\nfunction Register() {\n    const {loading, request, error} = useHttp();\n    const [form, setForm] = useState({\n        email: '', name: '', password: '', repeat_password: '', role: 'user'\n    })\n\n    const changeHandler = event => {\n        setForm({ ...form, [event.target.name]: event.target.value })\n    }\n    const registerHandler = async () => {\n        try {\n            const data = await request ('/api/auth/registration', 'POST', {...form})\n            console.log('Data ', data)\n        } catch (e) {}\n    }\n    if (loading) {\n        return <Spinner/>\n    }\n    return (\n        <div className=\"form\">\n            <FormErrors formErrors={error} />\n            <Form>\n                <Form.Group controlId=\"email\">\n                    <Form.Label>Email</Form.Label>\n                    <Form.Control\n                        required\n                        size=\"lg\"\n                        id=\"email\"\n                        name=\"email\"\n                        type=\"email\"\n                        value={form.email}\n                        placeholder=\"Введите email\"\n                        onChange={changeHandler}\n                    />\n                </Form.Group>\n\n                <Form.Group controlId=\"login\">\n                    <Form.Label>Никнейм</Form.Label>\n                    <Form.Control\n                        required\n                        size=\"lg\"\n                        id=\"name\"\n                        name=\"name\"\n                        type=\"text\"\n                        placeholder=\"Введите никнейм\"\n                        value={form.name}\n                        onChange={changeHandler}\n                    />\n                </Form.Group>\n\n                <Form.Group controlId=\"password\">\n                    <Form.Label>Пароль</Form.Label>\n                    <Form.Control\n                        required\n                        size=\"lg\"\n                        id=\"password\"\n                        name=\"password\"\n                        type=\"password\"\n                        value={form.password}\n                        placeholder=\"Введите пароль\"\n                        onChange={changeHandler}\n                    />\n                </Form.Group>\n\n                <Form.Group controlId=\"repeat_password\">\n                    <Form.Label>Пароль ещё раз</Form.Label>\n                    <Form.Control\n                        required\n                        size=\"lg\"\n                        id=\"repeat_password\"\n                        name=\"repeat_password\"\n                        type=\"password\"\n                        value={form.repeat_password}\n                        placeholder=\"Введите пароль повторно\"\n                      onChange={changeHandler}/>\n                </Form.Group>\n\n                <Button\n                    variant=\"secondary\"\n                    className='mr-m'\n                    type=\"submit\"\n                    onClick={registerHandler}\n                    disabled={loading}\n                >\n                    Зарегистрироваться\n                </Button>\n            </Form>\n        </div>\n    )\n}\n\nexport default Register"]},"metadata":{},"sourceType":"module"}