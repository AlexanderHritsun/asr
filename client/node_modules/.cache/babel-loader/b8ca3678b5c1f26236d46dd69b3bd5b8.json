{"ast":null,"code":"var _jsxFileName = \"/Users/alexander_hritsun/WebstormProjects/asr/client/src/pages/Users/EditUser.jsx\";\nimport React, { useCallback, useContext, useEffect, useState } from \"react\";\nimport { Form, Button } from \"react-bootstrap\";\nimport { useHttp } from \"../../hooks/http.hook\";\nimport { FormErrors } from \"../../components/FormError\";\nimport { AuthContext } from \"../../context/AuthContext\";\nimport { useParams, useHistory } from \"react-router-dom\";\nimport { Spinner } from \"../../components/Loader\";\n\nfunction EditUser() {\n  const id = useParams().id;\n  const history = useHistory();\n  const {\n    token\n  } = useContext(AuthContext);\n  const {\n    loading,\n    request,\n    error\n  } = useHttp();\n  const [form, setForm] = useState({\n    email: '',\n    name: '',\n    role: ''\n  });\n  const getUserData = useCallback(async () => {\n    const data = await request(`/api/users/${id}/edit`, 'GET', null, {\n      Authorization: `Bearer ${token}`\n    });\n    setForm(data);\n  }, [request, token]);\n\n  const changeHandler = event => {\n    setForm({ ...form,\n      [event.target.name]: event.target.value\n    });\n  };\n\n  const updateHandler = async id => {\n    try {\n      await request(`/api/users/${id}/edit`, 'PUT', { ...form\n      }, {\n        Authorization: `Bearer ${token}`\n      });\n      getUserData();\n    } catch (e) {}\n  };\n\n  useEffect(() => {\n    getUserData();\n  }, [getUserData]);\n\n  if (loading) {\n    return /*#__PURE__*/React.createElement(Spinner, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 16\n      }\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FormErrors, {\n    formErrors: error,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 21\n    }\n  }, \"Email\"), /*#__PURE__*/React.createElement(Form.Control, {\n    required: true,\n    size: \"lg\",\n    id: \"email\",\n    name: \"email\",\n    type: \"email\",\n    value: form.email,\n    placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 email\",\n    onChange: changeHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"login\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 21\n    }\n  }, \"\\u041D\\u0438\\u043A\\u043D\\u0435\\u0439\\u043C\"), /*#__PURE__*/React.createElement(Form.Control, {\n    required: true,\n    size: \"lg\",\n    id: \"name\",\n    name: \"name\",\n    type: \"text\",\n    placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u043D\\u0438\\u043A\\u043D\\u0435\\u0439\\u043C\",\n    value: form.name,\n    onChange: changeHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"role\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 21\n    }\n  }, \"\\u0420\\u043E\\u043B\\u044C\"), /*#__PURE__*/React.createElement(Form.Control, {\n    as: \"select\",\n    id: \"role\",\n    name: \"role\",\n    placeholder: \"\\u0423\\u043A\\u0430\\u0436\\u0438\\u0442\\u0435 \\u0440\\u043E\\u043B\\u044C\",\n    value: form.role,\n    onChange: changeHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 25\n    }\n  }, \"user\"), /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 25\n    }\n  }, \"admin\"), /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 25\n    }\n  }, \"moderator\"))), /*#__PURE__*/React.createElement(Button, {\n    variant: \"secondary\",\n    className: \"mr-m\",\n    type: \"submit\",\n    onClick: () => updateHandler(form._id),\n    disabled: loading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 17\n    }\n  }, \"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C\"), /*#__PURE__*/React.createElement(Button, {\n    type: \"button\",\n    variant: \"primary\",\n    onClick: () => history.push('/users'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 17\n    }\n  }, \"\\u041E\\u0442\\u043C\\u0435\\u043D\\u0438\\u0442\\u044C\")));\n}\n\nexport default EditUser;","map":{"version":3,"sources":["/Users/alexander_hritsun/WebstormProjects/asr/client/src/pages/Users/EditUser.jsx"],"names":["React","useCallback","useContext","useEffect","useState","Form","Button","useHttp","FormErrors","AuthContext","useParams","useHistory","Spinner","EditUser","id","history","token","loading","request","error","form","setForm","email","name","role","getUserData","data","Authorization","changeHandler","event","target","value","updateHandler","e","_id","push"],"mappings":"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","sourcesContent":["import React, {useCallback, useContext, useEffect, useState} from \"react\";\nimport {Form, Button} from \"react-bootstrap\";\nimport {useHttp} from \"../../hooks/http.hook\";\nimport {FormErrors} from \"../../components/FormError\";\nimport {AuthContext} from \"../../context/AuthContext\";\nimport { useParams, useHistory } from \"react-router-dom\"\nimport {Spinner} from \"../../components/Loader\";\n\n\n\n\nfunction EditUser() {\n    const id = useParams().id\n    const history = useHistory();\n    const {token} = useContext(AuthContext)\n    const {loading, request, error} = useHttp();\n    const [form, setForm] = useState({\n        email: '', name: '', role: ''\n    })\n\n    const getUserData = useCallback( async () => {\n      const data = await request(`/api/users/${id}/edit`, 'GET', null, {\n          Authorization: `Bearer ${token}`\n      })\n        setForm(data)\n    }, [request, token]);\n\n    const changeHandler = event => {\n        setForm({ ...form, [event.target.name]: event.target.value })\n    }\n    const updateHandler = async (id) => {\n        try {\n             await request(`/api/users/${id}/edit`, 'PUT', {...form}, {\n                Authorization: `Bearer ${token}`\n            })\n            getUserData()\n        } catch (e) {}\n    }\n\n    useEffect(() => {\n        getUserData()\n    }, [getUserData])\n\n    if (loading) {\n        return <Spinner/>\n    }\n\n    return (\n        <div className=\"form\">\n            <FormErrors formErrors={error} />\n            <Form>\n                <Form.Group controlId=\"email\">\n                    <Form.Label>Email</Form.Label>\n                    <Form.Control\n                        required\n                        size=\"lg\"\n                        id=\"email\"\n                        name=\"email\"\n                        type=\"email\"\n                        value={form.email}\n                        placeholder=\"Введите email\"\n                        onChange={changeHandler}\n                    />\n                </Form.Group>\n\n                <Form.Group controlId=\"login\">\n                    <Form.Label>Никнейм</Form.Label>\n                    <Form.Control\n                        required\n                        size=\"lg\"\n                        id=\"name\"\n                        name=\"name\"\n                        type=\"text\"\n                        placeholder=\"Введите никнейм\"\n                        value={form.name}\n                        onChange={changeHandler}\n                    />\n\n                </Form.Group>\n\n                <Form.Group controlId=\"role\">\n                    <Form.Label>Роль</Form.Label>\n                    <Form.Control\n                        as=\"select\"\n                        id=\"role\"\n                        name=\"role\"\n                        placeholder=\"Укажите роль\"\n                        value={form.role}\n                        onChange={changeHandler}\n                    >\n                        <option>user</option>\n                        <option>admin</option>\n                        <option>moderator</option>\n                    </Form.Control>\n                </Form.Group>\n\n\n                <Button\n                    variant=\"secondary\"\n                    className='mr-m'\n                    type=\"submit\"\n                    onClick={() => updateHandler(form._id)}\n                    disabled={loading}\n                >\n                    Сохранить\n                </Button>\n\n                <Button\n                    type=\"button\"\n                    variant=\"primary\"\n                    onClick={() => history.push('/users')}\n                >\n                    Отменить\n                </Button>\n            </Form>\n        </div>\n    )\n}\n\nexport default EditUser"]},"metadata":{},"sourceType":"module"}