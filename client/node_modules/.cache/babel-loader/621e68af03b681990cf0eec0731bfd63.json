{"ast":null,"code":"import { useState, useCallback, useEffect } from 'react';\nimport { useHistory } from \"react-router-dom\";\nconst storageName = 'userData';\nexport const useAuth = () => {\n  const [token, setToken] = useState(null);\n  const [ready, setReady] = useState(false);\n  const [userId, setUserId] = useState(null);\n  const [userRole, setUserRole] = useState(null);\n  const history = useHistory();\n  const login = useCallback((jwtToken, id, role) => {\n    setToken(jwtToken);\n    setUserId(id);\n    setUserRole(role);\n    localStorage.setItem(storageName, JSON.stringify({\n      userId: id,\n      token: jwtToken,\n      userRole: role\n    }));\n  }, []);\n  const logout = useCallback(() => {\n    setToken(null);\n    setUserId(null);\n    setUserRole(null);\n    localStorage.removeItem(storageName);\n    if (history) history.push('/');\n  }, []);\n  useEffect(() => {\n    const data = JSON.parse(localStorage.getItem(storageName));\n\n    if (data && data.token) {\n      login(data.token, data.userId, data.userRole);\n    }\n\n    setReady(true);\n  }, [login]);\n  return {\n    login,\n    logout,\n    token,\n    userId,\n    userRole,\n    ready\n  };\n};","map":{"version":3,"sources":["/Users/alexander_hritsun/WebstormProjects/asr/client/src/hooks/auth.hook.js"],"names":["useState","useCallback","useEffect","useHistory","storageName","useAuth","token","setToken","ready","setReady","userId","setUserId","userRole","setUserRole","history","login","jwtToken","id","role","localStorage","setItem","JSON","stringify","logout","removeItem","push","data","parse","getItem"],"mappings":"AAAA,SAAQA,QAAR,EAAkBC,WAAlB,EAA+BC,SAA/B,QAA+C,OAA/C;AACA,SAASC,UAAT,QAA2B,kBAA3B;AAEA,MAAMC,WAAW,GAAG,UAApB;AAEA,OAAO,MAAMC,OAAO,GAAG,MAAM;AACzB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAM,CAACQ,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,KAAD,CAAlC;AACA,QAAM,CAACU,MAAD,EAASC,SAAT,IAAsBX,QAAQ,CAAC,IAAD,CAApC;AACA,QAAM,CAACY,QAAD,EAAWC,WAAX,IAA0Bb,QAAQ,CAAC,IAAD,CAAxC;AACA,QAAMc,OAAO,GAAGX,UAAU,EAA1B;AAEA,QAAMY,KAAK,GAAGd,WAAW,CAAC,CAACe,QAAD,EAAWC,EAAX,EAAeC,IAAf,KAAwB;AAC9CX,IAAAA,QAAQ,CAACS,QAAD,CAAR;AACAL,IAAAA,SAAS,CAACM,EAAD,CAAT;AACAJ,IAAAA,WAAW,CAACK,IAAD,CAAX;AAEAC,IAAAA,YAAY,CAACC,OAAb,CAAqBhB,WAArB,EAAkCiB,IAAI,CAACC,SAAL,CAAe;AAC7CZ,MAAAA,MAAM,EAAEO,EADqC;AACjCX,MAAAA,KAAK,EAAEU,QAD0B;AAChBJ,MAAAA,QAAQ,EAAEM;AADM,KAAf,CAAlC;AAGH,GARwB,EAQtB,EARsB,CAAzB;AAWA,QAAMK,MAAM,GAAGtB,WAAW,CAAC,MAAM;AAC7BM,IAAAA,QAAQ,CAAC,IAAD,CAAR;AACAI,IAAAA,SAAS,CAAC,IAAD,CAAT;AACAE,IAAAA,WAAW,CAAC,IAAD,CAAX;AACAM,IAAAA,YAAY,CAACK,UAAb,CAAwBpB,WAAxB;AACA,QAAIU,OAAJ,EAAaA,OAAO,CAACW,IAAR,CAAa,GAAb;AAChB,GANyB,EAMvB,EANuB,CAA1B;AAQAvB,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMwB,IAAI,GAAGL,IAAI,CAACM,KAAL,CAAWR,YAAY,CAACS,OAAb,CAAqBxB,WAArB,CAAX,CAAb;;AAEA,QAAIsB,IAAI,IAAIA,IAAI,CAACpB,KAAjB,EAAwB;AACpBS,MAAAA,KAAK,CAACW,IAAI,CAACpB,KAAN,EAAaoB,IAAI,CAAChB,MAAlB,EAA0BgB,IAAI,CAACd,QAA/B,CAAL;AACH;;AACDH,IAAAA,QAAQ,CAAC,IAAD,CAAR;AACH,GAPQ,EAON,CAACM,KAAD,CAPM,CAAT;AASA,SAAO;AAAEA,IAAAA,KAAF;AAASQ,IAAAA,MAAT;AAAiBjB,IAAAA,KAAjB;AAAwBI,IAAAA,MAAxB;AAAgCE,IAAAA,QAAhC;AAA0CJ,IAAAA;AAA1C,GAAP;AACH,CApCM","sourcesContent":["import {useState, useCallback, useEffect} from 'react'\nimport { useHistory } from \"react-router-dom\";\n\nconst storageName = 'userData'\n\nexport const useAuth = () => {\n    const [token, setToken] = useState(null)\n    const [ready, setReady] = useState(false)\n    const [userId, setUserId] = useState(null)\n    const [userRole, setUserRole] = useState(null)\n    const history = useHistory();\n\n    const login = useCallback((jwtToken, id, role) => {\n        setToken(jwtToken)\n        setUserId(id)\n        setUserRole(role)\n\n        localStorage.setItem(storageName, JSON.stringify({\n            userId: id, token: jwtToken, userRole: role\n        }))\n    }, [])\n\n\n    const logout = useCallback(() => {\n        setToken(null)\n        setUserId(null)\n        setUserRole(null)\n        localStorage.removeItem(storageName)\n        if (history) history.push('/');\n    }, [])\n\n    useEffect(() => {\n        const data = JSON.parse(localStorage.getItem(storageName))\n\n        if (data && data.token) {\n            login(data.token, data.userId, data.userRole)\n        }\n        setReady(true)\n    }, [login])\n\n    return { login, logout, token, userId, userRole, ready}\n}\n"]},"metadata":{},"sourceType":"module"}