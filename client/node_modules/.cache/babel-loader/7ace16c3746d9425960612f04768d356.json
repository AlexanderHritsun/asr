{"ast":null,"code":"var _jsxFileName = \"/Users/alexander_hritsun/WebstormProjects/asr/client/src/pages/Home/index.jsx\";\nimport React, { useCallback, useContext, useEffect, useState } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport { Card, Button } from 'react-bootstrap';\nimport { Spinner } from \"../../components/Loader\";\nimport { useHttp } from \"../../hooks/http.hook\";\nimport { AuthContext } from \"../../context/AuthContext\";\nimport { PostCard } from \"../Posts/PostCard\";\n\nfunction Home() {\n  const {\n    search\n  } = useLocation();\n  const [posts, setPosts] = useState([]);\n  const {\n    loading,\n    request\n  } = useHttp();\n  const {\n    token\n  } = useContext(AuthContext);\n  const fetchPosts = useCallback(async () => {\n    try {\n      const fetched = await request(`/api/posts${search}`, 'GET', null, {\n        Authorization: `Bearer ${token}`\n      });\n      setPosts(fetched);\n    } catch (e) {}\n  }, [token, request, search]);\n  useEffect(() => {\n    fetchPosts();\n  }, [fetchPosts]);\n\n  const handlePostActionPerformed = () => {\n    fetchPosts();\n  };\n\n  if (loading) {\n    return /*#__PURE__*/React.createElement(Spinner, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 16\n      }\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"post\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, !loading && /*#__PURE__*/React.createElement(PostCard, {\n    posts: posts,\n    onActionPerformed: handlePostActionPerformed,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 26\n    }\n  }));\n}\n\nexport default Home;","map":{"version":3,"sources":["/Users/alexander_hritsun/WebstormProjects/asr/client/src/pages/Home/index.jsx"],"names":["React","useCallback","useContext","useEffect","useState","useLocation","Card","Button","Spinner","useHttp","AuthContext","PostCard","Home","search","posts","setPosts","loading","request","token","fetchPosts","fetched","Authorization","e","handlePostActionPerformed"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,WAAf,EAA4BC,UAA5B,EAAwCC,SAAxC,EAAmDC,QAAnD,QAAkE,OAAlE;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,SAASC,IAAT,EAAeC,MAAf,QAA6B,iBAA7B;AACA,SAAQC,OAAR,QAAsB,yBAAtB;AACA,SAAQC,OAAR,QAAsB,uBAAtB;AACA,SAAQC,WAAR,QAA0B,2BAA1B;AACA,SAAQC,QAAR,QAAuB,mBAAvB;;AAEA,SAASC,IAAT,GAAgB;AACZ,QAAM;AAAEC,IAAAA;AAAF,MAAaR,WAAW,EAA9B;AACA,QAAM,CAACS,KAAD,EAAQC,QAAR,IAAoBX,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM;AAACY,IAAAA,OAAD;AAAUC,IAAAA;AAAV,MAAqBR,OAAO,EAAlC;AACA,QAAM;AAACS,IAAAA;AAAD,MAAUhB,UAAU,CAACQ,WAAD,CAA1B;AAEA,QAAMS,UAAU,GAAGlB,WAAW,CAAC,YAAY;AACvC,QAAI;AACA,YAAMmB,OAAO,GAAG,MAAMH,OAAO,CAAE,aAAYJ,MAAO,EAArB,EAAwB,KAAxB,EAA+B,IAA/B,EAAqC;AAC9DQ,QAAAA,aAAa,EAAG,UAASH,KAAM;AAD+B,OAArC,CAA7B;AAGAH,MAAAA,QAAQ,CAACK,OAAD,CAAR;AACH,KALD,CAKE,OAAOE,CAAP,EAAU,CAAE;AACjB,GAP6B,EAO3B,CAACJ,KAAD,EAAQD,OAAR,EAAiBJ,MAAjB,CAP2B,CAA9B;AASAV,EAAAA,SAAS,CAAC,MAAM;AACZgB,IAAAA,UAAU;AACb,GAFQ,EAEN,CAACA,UAAD,CAFM,CAAT;;AAIA,QAAMI,yBAAyB,GAAG,MAAM;AACpCJ,IAAAA,UAAU;AACb,GAFD;;AAIA,MAAIH,OAAJ,EAAa;AACT,wBAAO,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACH;;AAED,sBACI;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACK,CAACA,OAAD,iBAAY,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAEF,KAAjB;AAAwB,IAAA,iBAAiB,EAAES,yBAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADjB,CADJ;AAKH;;AAED,eAAeX,IAAf","sourcesContent":["import React, {useCallback, useContext, useEffect, useState} from \"react\";\nimport { useLocation } from \"react-router-dom\"\nimport { Card, Button } from 'react-bootstrap';\nimport {Spinner} from \"../../components/Loader\";\nimport {useHttp} from \"../../hooks/http.hook\";\nimport {AuthContext} from \"../../context/AuthContext\";\nimport {PostCard} from \"../Posts/PostCard\";\n\nfunction Home() {\n    const { search } = useLocation();\n    const [posts, setPosts] = useState([])\n    const {loading, request} = useHttp()\n    const {token} = useContext(AuthContext)\n\n    const fetchPosts = useCallback(async () => {\n        try {\n            const fetched = await request(`/api/posts${search}`, 'GET', null, {\n                Authorization: `Bearer ${token}`\n            })\n            setPosts(fetched)\n        } catch (e) {}\n    }, [token, request, search])\n\n    useEffect(() => {\n        fetchPosts()\n    }, [fetchPosts])\n\n    const handlePostActionPerformed = () => {\n        fetchPosts()\n    }\n\n    if (loading) {\n        return <Spinner/>\n    }\n\n    return (\n        <div className=\"post\">\n            {!loading && <PostCard posts={posts} onActionPerformed={handlePostActionPerformed} />}\n        </div>\n    );\n}\n\nexport default Home;"]},"metadata":{},"sourceType":"module"}