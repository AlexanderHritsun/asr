{"ast":null,"code":"var _jsxFileName = \"/Users/alexander_hritsun/WebstormProjects/asr/client/src/pages/Posts/PostPage.jsx\";\nimport { Card, Container, Row, Col, Image, Button } from \"react-bootstrap\";\nimport React, { useCallback, useContext, useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { AuthContext } from \"context/AuthContext\";\nimport { useHttp } from \"hooks/http.hook\";\nimport { PostComment } from \"components/Comment\";\nimport AddComment from \"./AddComment\";\n\nfunction PostSpecificPage() {\n  const id = useParams().id;\n  const {\n    token\n  } = useContext(AuthContext);\n  const {\n    request\n  } = useHttp();\n  const [post, setForm] = useState({\n    title: '',\n    text: '',\n    files: [],\n    comments: []\n  });\n  const getPostData = useCallback(async () => {\n    try {\n      const data = await request(`/api/posts/${id}`, 'GET', null, {\n        Authorization: `Bearer ${token}`\n      });\n      setForm(data);\n    } catch (e) {}\n  }, [token, request]);\n\n  const handleCommentActionPerformed = () => {\n    getPostData();\n  };\n\n  useEffect(() => {\n    getPostData();\n  }, [getPostData]);\n  return /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: \"w100\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Card.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Card.Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 21\n    }\n  }, post.title), /*#__PURE__*/React.createElement(Card.Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 21\n    }\n  }, post.text), !!post.files.length && /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: 'flex',\n      justifyContent: 'center',\n      marginBottom: 15\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 25\n    }\n  }, post.files.map((file, i) => /*#__PURE__*/React.createElement(Image, {\n    src: file,\n    rounded: true,\n    style: {\n      maxWidth: 400,\n      maxHeight: 400,\n      margin: 10,\n      objectFit: 'cover'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 33\n    }\n  }))))), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      padding: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }, \"\\u041A\\u043E\\u043C\\u043C\\u0435\\u043D\\u0442\\u0430\\u0440\\u0438\\u0438:\"), !post.comments.length && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 21\n    }\n  }, \"\\u041A\\u043E\\u043C\\u043C\\u0435\\u043D\\u0442\\u0430\\u0440\\u0438\\u0435\\u0432 \\u043F\\u043E\\u043A\\u0430 \\u043D\\u0435\\u0442\")), post.comments.map(comment => {\n    return /*#__PURE__*/React.createElement(PostComment, {\n      key: comment._id,\n      comment: comment,\n      onActionPerformed: handleCommentActionPerformed,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 25\n      }\n    });\n  }), !!token && /*#__PURE__*/React.createElement(AddComment, {\n    postId: post._id,\n    onActionPerformed: handleCommentActionPerformed,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 25\n    }\n  }));\n}\n\nexport default PostSpecificPage;","map":{"version":3,"sources":["/Users/alexander_hritsun/WebstormProjects/asr/client/src/pages/Posts/PostPage.jsx"],"names":["Card","Container","Row","Col","Image","Button","React","useCallback","useContext","useEffect","useState","useParams","AuthContext","useHttp","PostComment","AddComment","PostSpecificPage","id","token","request","post","setForm","title","text","files","comments","getPostData","data","Authorization","e","handleCommentActionPerformed","length","display","justifyContent","marginBottom","map","file","i","maxWidth","maxHeight","margin","objectFit","padding","comment","_id"],"mappings":"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","sourcesContent":["import { Card, Container, Row, Col, Image, Button } from \"react-bootstrap\";\nimport React, { useCallback, useContext, useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { AuthContext } from \"context/AuthContext\";\nimport { useHttp } from \"hooks/http.hook\";\nimport { PostComment } from \"components/Comment\";\nimport AddComment from \"./AddComment\";\n\n\nfunction PostSpecificPage() {\n    const id = useParams().id\n    const { token } = useContext(AuthContext)\n    const { request } = useHttp();\n    const [post, setForm] = useState({\n        title: '', text: '', files: [], comments: []\n    })\n\n    const getPostData = useCallback(async () => {\n        try {\n            const data = await request(`/api/posts/${id}`, 'GET', null, {\n                Authorization: `Bearer ${token}`\n            })\n            setForm(data)\n        } catch (e) { }\n    }, [token, request]);\n\n    const handleCommentActionPerformed = () => {\n        getPostData()\n    }\n\n    useEffect(() => {\n        getPostData()\n    }, [getPostData])\n\n    return (\n        <Container>\n            <Card className='w100'>\n                <Card.Body>\n                    <Card.Title>{post.title}</Card.Title>\n\n                    <Card.Text>\n                        {post.text}\n                    </Card.Text>\n\n                    {!!post.files.length &&\n                        <div\n                            style={{\n                                display: 'flex',\n                                justifyContent: 'center',\n                                marginBottom: 15\n                            }}>\n                            {post.files.map((file, i) => (\n                                <Image src={file} rounded style={{\n                                    maxWidth: 400,\n                                    maxHeight: 400,\n                                    margin: 10,\n                                    objectFit: 'cover'\n                                }} />\n                            ))}\n                        </div>}\n                </Card.Body>\n            </Card>\n            <div style={{ padding: 10 }}>\n                Комментарии:\n            </div>\n            {!post.comments.length &&\n                <div>\n                    <p>Комментариев пока нет</p>\n                </div>\n            }\n            {post.comments.map(comment => {\n                return(\n                        <PostComment key={comment._id} comment={comment} onActionPerformed={handleCommentActionPerformed} />\n                    )\n            })}\n            {!!token && <AddComment postId={post._id} onActionPerformed={handleCommentActionPerformed} />}\n        </Container>\n    )\n}\n\nexport default PostSpecificPage"]},"metadata":{},"sourceType":"module"}